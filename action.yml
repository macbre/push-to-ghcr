name: "push-to-ghcr"
author: "@macbre"
description: "This action simplifies pushes of Docker images ot ghcr.io repository"
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#branding
branding:
  icon: "arrow-up-circle"
  color: "blue"
  
inputs:
  github_token: 
     description: "Your secrets.GITHUB_TOKEN"
     required: true

  image_name:
    description: "Image name, e.g. my-user-name/my-repo"
    required: true

  repository:
    description: "Docker repository to push an image to, defaults to ghcr.io"
    required: true
    default: "ghcr.io"

  docker_io_token:
    description: "Your docker.io token created via https://hub.docker.com/settings/security"
    required: false

runs:
  using: "composite"
  steps:
    # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry
    - name: Log in to the Container registry
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        DOCKER_BUILDKIT: 1
        DOCKER_IO_TOKEN: ${{ inputs.docker_io_token }}

      run: |
        echo "Using $(docker -v)"

        echo "::group::Logging into the GitHub Container registry (ghcr.io) ..."
        echo "${GITHUB_TOKEN}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        echo "::endgroup::"

        echo "::group::Set commit tag and image name"
        if [ "${{ github.event_name }}" = "release" ]; then
          export COMMIT_TAG=${GITHUB_REF:10}
          export COMMIT_TAG=${COMMIT_TAG//v/}
        else
          export COMMIT_TAG=latest
        fi

        echo "Tagging with ${COMMIT_TAG}"
        echo "::endgroup::"

        export BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        export GITHUB_URL=https://github.com/${{ github.repository }}

        echo "::group::Building the Docker image: ${{ inputs.repository }}/${{ inputs.image_name }}:${COMMIT_TAG} ..."

        # https://docs.docker.com/develop/develop-images/build_enhancements/
        # https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources
        >&0 docker build . \
          --progress tty \
          --cache-from ${{ inputs.repository }}/${{ inputs.image_name }}:latest \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          \
          --build-arg BUILD_DATE=${BUILD_DATE} \
          --build-arg GITHUB_SHA=${GITHUB_SHA} \
          \
          --tag ${{ inputs.repository }}/${{ inputs.image_name }}:${COMMIT_TAG} \
          --tag docker.io/${{ inputs.image_name }}:${COMMIT_TAG} \
          \
          --label org.label-schema.build-date=${BUILD_DATE} \
          --label org.label-schema.vcs-url=${GITHUB_URL} \
          --label org.label-schema.vcs-ref=${GITHUB_SHA} \
          \
          --label org.opencontainers.image.created=${BUILD_DATE} \
          --label org.opencontainers.image.source=${GITHUB_URL} \
          --label org.opencontainers.image.revision=${GITHUB_SHA}

        echo "::endgroup::"

        echo "::group::Inspecting the image ..."
        docker images

        echo "Labels:"
        docker image inspect ${{ inputs.repository }}/${{ inputs.image_name }}:${COMMIT_TAG} | jq '.[].Config.Labels'

        echo "Env variables:"
        docker image inspect ${{ inputs.repository }}/${{ inputs.image_name }}:${COMMIT_TAG} | jq '.[].Config.Env'

        echo "::endgroup::"

        echo "::group::Pushing the Docker image to ${{ inputs.repository }} ..."
        >&0 docker push ${{ inputs.repository }}/${{ inputs.image_name }}:${COMMIT_TAG} && echo "Pushed"
        echo "::endgroup::"

        if [ -z "${DOCKER_IO_TOKEN}" ]; then
          echo "::warning::NOT pushing the Docker image to docker.io ... Provide 'docker_io_token' if needed."
        else
          echo "::group::Pushing the Docker image to docker.io ..."
          echo "${DOCKER_IO_TOKEN}" | docker login docker.io -u "${{ github.actor }}" --password-stdin

          >&0 docker push docker.io/${{ inputs.image_name }}:${COMMIT_TAG} && echo "Pushed"

          echo "::endgroup::"
        fi
